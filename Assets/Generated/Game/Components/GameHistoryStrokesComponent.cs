//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity historyStrokesEntity { get { return GetGroup(GameMatcher.HistoryStrokes).GetSingleEntity(); } }
    public HistoryStrokes historyStrokes { get { return historyStrokesEntity.historyStrokes; } }
    public bool hasHistoryStrokes { get { return historyStrokesEntity != null; } }

    public GameEntity SetHistoryStrokes(System.Collections.Generic.Stack<HistoryBrash[]> newValue) {
        if (hasHistoryStrokes) {
            throw new Entitas.EntitasException("Could not set HistoryStrokes!\n" + this + " already has an entity with HistoryStrokes!",
                "You should check if the context already has a historyStrokesEntity before setting it or use context.ReplaceHistoryStrokes().");
        }
        var entity = CreateEntity();
        entity.AddHistoryStrokes(newValue);
        return entity;
    }

    public void ReplaceHistoryStrokes(System.Collections.Generic.Stack<HistoryBrash[]> newValue) {
        var entity = historyStrokesEntity;
        if (entity == null) {
            entity = SetHistoryStrokes(newValue);
        } else {
            entity.ReplaceHistoryStrokes(newValue);
        }
    }

    public void RemoveHistoryStrokes() {
        historyStrokesEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public HistoryStrokes historyStrokes { get { return (HistoryStrokes)GetComponent(GameComponentsLookup.HistoryStrokes); } }
    public bool hasHistoryStrokes { get { return HasComponent(GameComponentsLookup.HistoryStrokes); } }

    public void AddHistoryStrokes(System.Collections.Generic.Stack<HistoryBrash[]> newValue) {
        var index = GameComponentsLookup.HistoryStrokes;
        var component = (HistoryStrokes)CreateComponent(index, typeof(HistoryStrokes));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceHistoryStrokes(System.Collections.Generic.Stack<HistoryBrash[]> newValue) {
        var index = GameComponentsLookup.HistoryStrokes;
        var component = (HistoryStrokes)CreateComponent(index, typeof(HistoryStrokes));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveHistoryStrokes() {
        RemoveComponent(GameComponentsLookup.HistoryStrokes);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHistoryStrokes;

    public static Entitas.IMatcher<GameEntity> HistoryStrokes {
        get {
            if (_matcherHistoryStrokes == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HistoryStrokes);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHistoryStrokes = matcher;
            }

            return _matcherHistoryStrokes;
        }
    }
}
