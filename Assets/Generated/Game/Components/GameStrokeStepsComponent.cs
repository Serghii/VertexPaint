//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity strokeStepsEntity { get { return GetGroup(GameMatcher.StrokeSteps).GetSingleEntity(); } }
    public StrokeStepsComponent strokeSteps { get { return strokeStepsEntity.strokeSteps; } }
    public bool hasStrokeSteps { get { return strokeStepsEntity != null; } }

    public GameEntity SetStrokeSteps(StrokeSteps newValue) {
        if (hasStrokeSteps) {
            throw new Entitas.EntitasException("Could not set StrokeSteps!\n" + this + " already has an entity with StrokeStepsComponent!",
                "You should check if the context already has a strokeStepsEntity before setting it or use context.ReplaceStrokeSteps().");
        }
        var entity = CreateEntity();
        entity.AddStrokeSteps(newValue);
        return entity;
    }

    public void ReplaceStrokeSteps(StrokeSteps newValue) {
        var entity = strokeStepsEntity;
        if (entity == null) {
            entity = SetStrokeSteps(newValue);
        } else {
            entity.ReplaceStrokeSteps(newValue);
        }
    }

    public void RemoveStrokeSteps() {
        strokeStepsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public StrokeStepsComponent strokeSteps { get { return (StrokeStepsComponent)GetComponent(GameComponentsLookup.StrokeSteps); } }
    public bool hasStrokeSteps { get { return HasComponent(GameComponentsLookup.StrokeSteps); } }

    public void AddStrokeSteps(StrokeSteps newValue) {
        var index = GameComponentsLookup.StrokeSteps;
        var component = (StrokeStepsComponent)CreateComponent(index, typeof(StrokeStepsComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceStrokeSteps(StrokeSteps newValue) {
        var index = GameComponentsLookup.StrokeSteps;
        var component = (StrokeStepsComponent)CreateComponent(index, typeof(StrokeStepsComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveStrokeSteps() {
        RemoveComponent(GameComponentsLookup.StrokeSteps);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherStrokeSteps;

    public static Entitas.IMatcher<GameEntity> StrokeSteps {
        get {
            if (_matcherStrokeSteps == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.StrokeSteps);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherStrokeSteps = matcher;
            }

            return _matcherStrokeSteps;
        }
    }
}
