//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity brushPositionEntity { get { return GetGroup(GameMatcher.BrushPosition).GetSingleEntity(); } }
    public BrushPosition brushPosition { get { return brushPositionEntity.brushPosition; } }
    public bool hasBrushPosition { get { return brushPositionEntity != null; } }

    public GameEntity SetBrushPosition(UnityEngine.Vector3 newPosition, UnityEngine.Vector3 newNormal) {
        if (hasBrushPosition) {
            throw new Entitas.EntitasException("Could not set BrushPosition!\n" + this + " already has an entity with BrushPosition!",
                "You should check if the context already has a brushPositionEntity before setting it or use context.ReplaceBrushPosition().");
        }
        var entity = CreateEntity();
        entity.AddBrushPosition(newPosition, newNormal);
        return entity;
    }

    public void ReplaceBrushPosition(UnityEngine.Vector3 newPosition, UnityEngine.Vector3 newNormal) {
        var entity = brushPositionEntity;
        if (entity == null) {
            entity = SetBrushPosition(newPosition, newNormal);
        } else {
            entity.ReplaceBrushPosition(newPosition, newNormal);
        }
    }

    public void RemoveBrushPosition() {
        brushPositionEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BrushPosition brushPosition { get { return (BrushPosition)GetComponent(GameComponentsLookup.BrushPosition); } }
    public bool hasBrushPosition { get { return HasComponent(GameComponentsLookup.BrushPosition); } }

    public void AddBrushPosition(UnityEngine.Vector3 newPosition, UnityEngine.Vector3 newNormal) {
        var index = GameComponentsLookup.BrushPosition;
        var component = (BrushPosition)CreateComponent(index, typeof(BrushPosition));
        component.position = newPosition;
        component.normal = newNormal;
        AddComponent(index, component);
    }

    public void ReplaceBrushPosition(UnityEngine.Vector3 newPosition, UnityEngine.Vector3 newNormal) {
        var index = GameComponentsLookup.BrushPosition;
        var component = (BrushPosition)CreateComponent(index, typeof(BrushPosition));
        component.position = newPosition;
        component.normal = newNormal;
        ReplaceComponent(index, component);
    }

    public void RemoveBrushPosition() {
        RemoveComponent(GameComponentsLookup.BrushPosition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBrushPosition;

    public static Entitas.IMatcher<GameEntity> BrushPosition {
        get {
            if (_matcherBrushPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BrushPosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBrushPosition = matcher;
            }

            return _matcherBrushPosition;
        }
    }
}
